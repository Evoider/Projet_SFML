#include "Background.h"

Background::Background()
{
	this->offSetX = 75;
	this->offSetY = 75;
	this->vecbox;

	this->forest.loadFromFile("Ressources/Sprites/green_forest_new.png");
	
}

void Background::initTab()
{
    int forest1[50][50] =
    {
    {31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32},
    {41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42},
    {51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52},
    {61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62},
    {71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32},
    {43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42},
    {53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52},
    {63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 16, 16, 16, 16, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62},
    {73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 16, 16, 16, 16, 8, 26, 26, 26, 26, 9, 16, 16, 16, 16, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32},
    {43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42},
    {53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 0, 0, 0, 0, 0, 0, 0, 35, 36, 36, 36, 36, 18, 26, 26, 26, 26, 19, 36, 36, 36, 36, 37, 0, 0, 0, 0, 0, 0, 0, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52},
    {63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62},
    {73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 16, 16, 16, 16, 16, 16, 16, 16, 8, 26, 26, 26, 26, 9, 16, 16, 16, 16, 16, 16, 16, 16, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    {33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 0, 0, 0, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 0, 0, 0, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32},
    {43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 0, 0, 0, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 0, 0, 0, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42},
    {53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 0, 0, 0, 35, 36, 36, 36, 36, 36, 36, 36, 36, 18, 26, 26, 26, 26, 19, 36, 36, 36, 36, 36, 36, 36, 36, 37, 0, 0, 0, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52},
    { 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62},
    { 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72},
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 26, 26, 26, 26, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35, 36, 36, 36, 36, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32},
    { 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 29, 29, 29, 29, 29, 29, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42},
    { 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 39, 39, 39, 39, 39, 39, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52},
    { 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 49, 49, 49, 49, 49, 49, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62},
    { 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72},
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32, 33, 34, 31, 32},
    { 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42, 43, 44, 41, 42},
    { 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52, 53, 54, 51, 52},
    { 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62, 63, 64, 61, 62},
    { 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72, 73, 74, 71, 72},
    };

	

	for (int y = 0; y < 50 ; y++)
	{
		for (int x = 0; x < 50; x++)
		{
            for (int m = 0; m < 80; m++)
            {
                if (forest1[y][x] - 1 == m)
                {
                    if (m <= 9)
                    {
                        sf::Sprite box;
                        box.setTexture(forest);
                        box.setTextureRect(sf::IntRect((m % 10) * 16, 0, 16, 16));
                        box.scale(4.6875, 4.6875);
                        box.setPosition(sf::Vector2f(x * offSetX, y * offSetY));
                        vecbox.push_back(box);
                    }
                    else if (m <= 18)
                    {
                        sf::Sprite box;
                        box.setTexture(forest);
                        box.setTextureRect(sf::IntRect((m % 21) * 16, 16, 16, 16));
                        box.scale(4.6875, 4.6875);
                        box.setPosition(sf::Vector2f(x * offSetX, y * offSetY));
                        vecbox.push_back(box);
                    }
                    else if (m <= 27)
                    {
                        sf::Sprite box;
                        box.setTexture(forest);
                        box.setTextureRect(sf::IntRect((m % 21) * 16, 2*16, 16, 16));
                        box.scale(4.6875, 4.6875);
                        box.setPosition(sf::Vector2f(x * offSetX, y * offSetY));
                        vecbox.push_back(box);
                    }
                    else if (m <= 36)
                    {
                        sf::Sprite box;
                        box.setTexture(forest);
                        box.setTextureRect(sf::IntRect((m % 21) * 16, 3*16, 16, 16));
                        box.scale(4.6875, 4.6875);
                        box.setPosition(sf::Vector2f(x * offSetX, y * offSetY));
                        vecbox.push_back(box);
                    }
                    else if (m <= 45)
                    {
                        sf::Sprite box;
                        box.setTexture(forest);
                        box.setTextureRect(sf::IntRect((m % 21) * 16, 4*16, 16, 16));
                        box.scale(4.6875, 4.6875);
                        box.setPosition(sf::Vector2f(x * offSetX, y * offSetY));
                        vecbox.push_back(box);
                    }
                    else if (m <= 54)
                    {
                        sf::Sprite box;
                        box.setTexture(forest);
                        box.setTextureRect(sf::IntRect((m % 21) * 16, 5*16, 16, 16));
                        box.scale(4.6875, 4.6875);
                        box.setPosition(sf::Vector2f(x * offSetX, y * offSetY));
                        vecbox.push_back(box);
                    }
                }
            }
		}
	}

}

void Background::render(sf::RenderTarget* target)
{
	for (int i = 0; i < vecbox.size(); i++)
	{
		target->draw(this->vecbox[i]);
	}
}